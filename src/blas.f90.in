! Copyright (c) 2021, University of Colorado Denver. All rights reserved.
!
! This file is part of T-LAPACK.
! T-LAPACK is free software: you can redistribute it and/or modify it under
! the terms of the BSD 3-Clause license. See the accompanying LICENSE file.

module blas
    use, intrinsic :: iso_c_binding
    private
    public :: saxpy, daxpy

    include "blas.fi"

contains

    subroutine saxpy ( n, alpha, x, incx, y, incy )
    implicit none
        
        integer(@FBLAS_INT_BYTES@), parameter :: wp = kind(1.e0)
        integer(@FBLAS_INT_BYTES@)            :: n, incx, incy
        real(wp)              :: alpha
        real(wp), target      :: x(*), y(*)

        call saxpy_( int(n, @FBLAS_SIZE_T@), alpha, &
            c_loc(x), int(incx, @FBLAS_INT_T@), &
            c_loc(y), int(incy, @FBLAS_INT_T@) )
    end subroutine

    subroutine daxpy ( n, alpha, x, incx, y, incy )
    implicit none
        
        integer(@FBLAS_INT_BYTES@), parameter :: wp = kind(1.d0)
        integer(@FBLAS_INT_BYTES@)            :: n, incx, incy
        real(wp)              :: alpha
        real(wp), target      :: x(*), y(*)

        call daxpy_( int(n, @FBLAS_SIZE_T@), alpha, &
            c_loc(x), int(incx, @FBLAS_INT_T@), &
            c_loc(y), int(incy, @FBLAS_INT_T@) )
    end subroutine

end module
