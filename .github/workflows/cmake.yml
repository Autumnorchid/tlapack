name: CMake

on:
  push:
    paths-exclude:
    - '.github/**'
    - 'docs/**'
    - '**.md'
    - 'LICENSE'
    - 'version.txt'
    - '.gitattributes'
    - '.gitignore'
  pull_request:
    paths-exclude:
    - '.github/**'
    - 'docs/**'
    - '**.md'
    - 'LICENSE'
    - 'version.txt'
    - '.gitattributes'
    - '.gitignore'

env:
  CFLAGS: "-Wall -pedantic"
  CXXFLAGS: "-Wall -pedantic"
  FFLAGS: "-fimplicit-none -fcheck=all"
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

defaults:
  run:
    shell: bash

jobs:

  build-all-os:
    # Use GNU compilers
  
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    
    steps:
    
    - name: Checkout <T>LAPACK
      uses: actions/checkout@v2

    - name: Install Eigen
      run: sudo apt install libeigen3-dev

    - name: Specific configurations for CMake on MacOS
      if: ${{ matrix.os == 'macos-latest' }}
      env:
        LDFLAGS: "-lstdc++"
      run: >
        cmake -B build
        -DCMAKE_CXX_COMPILER="gcc-11"
        -DCMAKE_Fortran_COMPILER="gfortran-11"

    - name: Specific configurations for CMake on Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: >
        cmake -B build -G "Unix Makefiles"
        -D CMAKE_EXE_LINKER_FLAGS="-Wl,--allow-multiple-definition"

    - name: Configure CMake on all platforms
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B build
        -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -D CMAKE_INSTALL_PREFIX=${{github.workspace}}/tlapack_install
        -D BUILD_SHARED_LIBS=ON
        -D BUILD_EXAMPLES=ON
        -D BUILD_TESTING=ON
        -D C_WRAPPERS=ON
        -D Fortran_WRAPPERS=ON
        -D CBLAS_WRAPPERS=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Run all examples
      # Mind that the job won't fail with only this step fails
      continue-on-error: true
      run: cmake --build build --target run-all-examples

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Install
      run: cmake --build build --target install

  build-with-mpfr:
    runs-on: ubuntu-latest
    steps:     
    
    - name: Checkout <T>LAPACK
      uses: actions/checkout@v2

    - name: Install MPFR C++
      run: sudo apt install libmpfrc++-dev

    - name: Install Eigen
      run: sudo apt install libeigen3-dev

    - name: Configure CMake for <T>LAPACK
      run: >
        cmake -B build
        -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
        -D CMAKE_INSTALL_PREFIX=${{github.workspace}}/tlapack_install
        -D BUILD_SHARED_LIBS=ON
        -D TEST_MPFR=ON

    - name: Build <T>LAPACK
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test <T>LAPACK
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        echo "Mind that the job won't fail if only this step fails."
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Install
      run: cmake --build build --target install

  build-with-openblas:
    runs-on: ubuntu-latest
    env:
      blaspp_DIR: ${{github.workspace}}/blaspp
    steps:
    
    - name: Checkout <T>LAPACK
      uses: actions/checkout@v2

    - name: Install Eigen
      run: sudo apt install libeigen3-dev

    - name: Install OpenBLAS
      run: sudo apt install libopenblas-dev

    - name: Checkout BLAS++
      run: git clone https://bitbucket.org/weslleyspereira/blaspp ${{env.blaspp_DIR}}

    - name: Build and install BLAS++
      working-directory: ${{env.blaspp_DIR}}
      run: |
        git checkout tlapack
        mkdir build
        cmake -Bbuild -DBLA_VENDOR=OpenBLAS -Dbuild_tests=OFF -DCMAKE_INSTALL_PREFIX=${{env.blaspp_DIR}}
        cmake --build build --target install

    - name: Configure CMake for <T>LAPACK
      run: >
        cmake -B build
        -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -D BUILD_SHARED_LIBS=ON
        -D BUILD_EXAMPLES=ON
        -D BUILD_TESTING=ON
        -D C_WRAPPERS=ON
        -D Fortran_WRAPPERS=ON
        -D CBLAS_WRAPPERS=ON
        -D USE_BLASPP_WRAPPERS=ON
        -D blaspp_DIR=${{env.blaspp_DIR}}

    - name: Build <T>LAPACK
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    # Mind that the job won't fail if only this step fails
    - name: Test InfNaN propagation
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        echo "Mind that the job won't fail if only this step fails."
        ./tester -# [#test_infNaN] -r compact

    # Mind that the job won't fail if only this step fails
    - name: Test InfNaN propagation on iamax
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        echo "Mind that the job won't fail if only this step fails."
        ./tester -# [#test_infNaN_iamax] -r compact

    # Mind that the job won't fail if only this step fails
    - name: Test InfNaN propagation on nrm2
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        echo "Mind that the job won't fail if only this step fails."
        ./tester -# [#test_infNaN_nrm2] -r compact

    # Mind that the job won't fail if only this step fails
    - name: Test InfNaN propagation on trsv and trsm
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        echo "Mind that the job won't fail if only this step fails."
        ./tester -# [#test_infNaN_trsv_trsm] -r compact

    # Mind that the job won't fail if only this step fails
    - name: Test Corner Cases
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        echo "Mind that the job won't fail if only this step fails."
        ./tester -# [#test_corner_cases] -r compact
      # echo "Total of:"
      # ./tester -# [#test_corner_cases] -l | tail -n 2
